version: '3.8'

services:
  traefik:
    command:
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=default
      - --entrypoints.web.address=:8080
      - --api
    container_name: traefik
    image: traefik:v2.3.4
    labels:
      - traefik.enable=true
      - traefik.http.middlewares.auth.basicauth.users=${HTTP_USER}:${HTTP_PASSWORD}
    networks:
      - webnet
    ports:
      - ${PORT}:8080
    restart: ${RESTART}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  dozzle:
    container_name: dozzle
    depends_on:
      - traefik
    image: amir20/dozzle:v3.0.3
    labels:
      - traefik.enable=true
      - traefik.http.routers.dozzle.rule=Host(`dozzle.${HOST}`)
      - traefik.http.routers.dozzle.entrypoints=web
      - traefik.http.routers.dozzle.middlewares=auth
      - traefik.http.services.dozzle.loadbalancer.server.port=8080
    networks:
      - webnet
    restart: ${RESTART}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  postgres:
    container_name: postgres
    environment:
      TZ: ${TZ}
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_BASENAME}
      PGDATA: /var/lib/postgresql/data/pgdata
    image: postgres:13.1-alpine
    networks:
      - webnet
    restart: ${RESTART}
    volumes:
      - postgres:/var/lib/postgresql/data

  adminer:
    container_name: adminer
    depends_on:
      - postgres
      - traefik
    image: adminer:4.7.7
    labels:
      - traefik.enable=true
      - traefik.http.routers.adminer.rule=Host(`adminer.${HOST}`)
      - traefik.http.routers.adminer.entrypoints=web
      - traefik.http.services.adminer.loadbalancer.server.port=8080
    networks:
      - webnet
    restart: ${RESTART}

  nest:
    build:
      context: .
      target: ${NODE_ENV}
    command: sh run.sh
    container_name: nest
    depends_on:
      - postgres
      - traefik
    env_file:
      - .env
    labels:
      - traefik.enable=true
      - traefik.http.routers.nest.rule=Host(`${HOST}`)
      - traefik.http.routers.nest.entrypoints=web
      - traefik.http.services.nest.loadbalancer.server.port=8080
    networks:
      - webnet
    ports:
      - 9229:9229
    restart: ${RESTART}
    user: ${UID}:${GID}
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

volumes:
  postgres:
    driver: local
    external: false

networks:
  webnet:
    driver: bridge
