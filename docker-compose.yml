version: '3.8'

services:
  dozzle:
    container_name: ${PREFIX}-dozzle
    image: amir20/dozzle:${TAG_DOZZLE}
    networks:
      - webnet
    restart: ${RESTART}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  postgres:
    command: ['postgres', '-c', 'log_statement=all']
    container_name: ${PREFIX}-postgres
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_BASENAME}
      PGDATA: /var/lib/postgresql/data/pgdata
    image: postgres:${TAG_POSTGRES}
    networks:
      - webnet
    ports:
      - ${CLI_POSTGRES_PORT}:5432
    restart: ${RESTART}
    volumes:
      - postgres:/var/lib/postgresql/data

  adminer:
    container_name: ${PREFIX}-adminer
    depends_on:
      - postgres
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    image: adminer:${TAG_ADMINER}
    networks:
      - webnet
    restart: ${RESTART}

  nest:
    build:
      args:
        tag: ${TAG_NODE}
        uid: ${UID}
        gid: ${GID}
      context: .
      target: ${NODE_ENV}
    command: sh run.sh
    container_name: ${PREFIX}-nest
    depends_on:
      - postgres
    env_file:
      - .env
    networks:
      - webnet
    ports:
      - 9229:9229
    restart: ${RESTART}
    user: ${UID}:${GID}
    volumes:
      - .:/home/node/app
      - /home/node/app/node_modules
      - /home/node/app/dist
      - /home/node/app/.adminbro

  nginx:
    container_name: ${PREFIX}-nginx
    depends_on:
      - dozzle
      - adminer
      - nest
    environment:
      PORT_ADMINER: ${PORT_ADMINER}
      PORT_DOZZLE: ${PORT_DOZZLE}
    image: nginx:${TAG_NGINX}
    networks:
      - webnet
    ports:
      - ${PORT}:8080
      - ${PORT_ADMINER}:${PORT_ADMINER}
      - ${PORT_DOZZLE}:${PORT_DOZZLE}
    restart: ${RESTART}
    volumes:
      - type: bind
        source: ./docker/config/nginx.conf
        target: /etc/nginx/templates/nginx.conf.template
        read_only: true
      - type: bind
        source: ./docker/config/system.htpasswd
        target: /etc/nginx/conf.d/system.htpasswd
        read_only: true
      - type: bind
        source: ./docker/config/admin.htpasswd
        target: /etc/nginx/conf.d/admin.htpasswd
        read_only: true

volumes:
  postgres:
    name: ${PREFIX}-postgres
    driver: local
    external: false

networks:
  webnet:
    name: ${PREFIX}-server
    driver: bridge
